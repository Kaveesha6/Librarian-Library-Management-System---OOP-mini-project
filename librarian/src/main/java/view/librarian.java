/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.CheckOutHandler;
import controller.NewBookController;
import controller.PatronController;
import controller.ReservedBook;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BookCopy;
import model.BookMin;
import model.BookSearchResult;
import model.BookTitle;
import model.Patron;
import model.PatronMin;

/**
 *
 * @author kavindu
 */
public class librarian extends javax.swing.JFrame {

    /**
     * Creates new form librarian
     */
    File book;
    File patrion;
    File reservebook;
    File checkout;

    private int selectedBookTitleId;
    private int selectedPatronId;

    public librarian() {
        try {
            try {

                book = new File("db/databook.txt");
                if (book.createNewFile()) {
                    System.out.println("the file has been created" + book.getName());

                } else {
                    System.out.println("Book File already exists");
                }

            } catch (IOException exc) {
                System.out.println("An error occurred" + exc);

            }
            try {

                patrion = new File("db/patrons.txt");
                if (patrion.createNewFile()) {
                    System.out.println("the file has been created" + patrion.getName());

                } else {
                    System.out.println("Patron File already exists");
                }

            } catch (IOException exc) {
                System.out.println("An error occurred" + exc);

            }
            try {

                reservebook = new File("db/reservedbook.txt");
                if (reservebook.createNewFile()) {
                    System.out.println("the file has been created" + reservebook.getName());

                } else {
                    System.out.println("Book File already exists");
                }

            } catch (IOException exc) {
                System.out.println("An error occurred" + exc);

            }
            try {

                checkout = new File("db/checkout.txt");
                if (checkout.createNewFile()) {
                    System.out.println("the file has been created" + checkout.getName());

                } else {
                    System.out.println("Book File already exists");
                }

            } catch (IOException exc) {
                System.out.println("An error occurred" + exc);

            }
            initComponents();

//            PatronController patronController = new PatronController();
//            NewBookController bookController = new NewBookController();
//            List<BookTitle> bookList = bookController.getAllBookList(book);
//            //
//            cmbCheckOutPatron.removeAllItems();
//
//            for (Patron patron : patronList) {
//                cmbCheckOutPatron.addItem(patron.getName());
//            }
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        tpParent = new javax.swing.JTabbedPane();
        tpSearch = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtSearchBook = new javax.swing.JTextField();
        jButtonSearch1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblBookSearchResult = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtPatronName = new javax.swing.JTextField();
        btnSavePatron = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelephone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbPatronType = new javax.swing.JComboBox<>();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jButtonSearchReservedBook = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCIReservedCopy = new javax.swing.JTable();
        jButtonSearchReservedBook1 = new javax.swing.JButton();
        cmbCIPatron = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBookCopyStatus = new javax.swing.JTable();
        cmbCOPatron = new javax.swing.JComboBox<>();
        cmbCOBook = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        tpUpdateBook = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtBookTitle = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtEdition = new javax.swing.JTextField();
        txtPubYear = new javax.swing.JTextField();
        jButtonBAddbook = new javax.swing.JButton();
        txtISBN = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtPublisher = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtCatelogNumber = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtUBookTitle = new javax.swing.JTextField();
        txtUAuthor = new javax.swing.JTextField();
        txtUEdition = new javax.swing.JTextField();
        txtUPubYear = new javax.swing.JTextField();
        jButtonBUpdatebook = new javax.swing.JButton();
        txtUISBN = new javax.swing.JTextField();
        txtUPublisher = new javax.swing.JTextField();
        txtUCatelogNumber = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnDeleteBook = new javax.swing.JButton();
        txtNoOfCopies = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tpParent.setBackground(new java.awt.Color(102, 255, 102));

        tpSearch.setBackground(new java.awt.Color(0, 153, 153));

        jTabbedPane5.setBackground(new java.awt.Color(255, 102, 102));

        jPanel1.setBackground(new java.awt.Color(255, 204, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 422, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Patron", jPanel1);

        jPanel6.setBackground(new java.awt.Color(255, 204, 51));
        jPanel6.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel11.setText("Book / ISBN");
        jPanel6.add(jLabel11);
        jLabel11.setBounds(6, 52, 90, 19);

        txtSearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchBookActionPerformed(evt);
            }
        });
        jPanel6.add(txtSearchBook);
        txtSearchBook.setBounds(102, 47, 311, 27);

        jButtonSearch1.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jButtonSearch1.setText("Search Book");
        jButtonSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearch1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButtonSearch1);
        jButtonSearch1.setBounds(141, 92, 111, 25);

        tblBookSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Title", "Copies"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBookSearchResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBookSearchResultMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblBookSearchResult);

        jPanel6.add(jScrollPane5);
        jScrollPane5.setBounds(6, 134, 407, 80);

        jTabbedPane5.addTab("Book", jPanel6);

        javax.swing.GroupLayout tpSearchLayout = new javax.swing.GroupLayout(tpSearch);
        tpSearch.setLayout(tpSearchLayout);
        tpSearchLayout.setHorizontalGroup(
            tpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpSearchLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        tpSearchLayout.setVerticalGroup(
            tpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );

        tpParent.addTab("Search", tpSearch);

        jPanel9.setBackground(new java.awt.Color(255, 204, 51));
        jPanel9.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel9ComponentShown(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel3.setText("Patron Name");

        btnSavePatron.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        btnSavePatron.setText("Update Patron");
        btnSavePatron.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                btnSavePatronComponentShown(evt);
            }
        });
        btnSavePatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePatronActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel4.setText("Patron Address");

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel5.setText("Patron Type");

        jLabel6.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel6.setText("Patron Telephone");

        cmbPatronType.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cmbPatronType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Faculty", "Graduate Student", "Undergraduate" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(51, 51, 51)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(51, 51, 51)
                        .addComponent(txtPatronName, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTelephone, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(cmbPatronType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(btnSavePatron)
                        .addGap(89, 89, 89)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPatronName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cmbPatronType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(btnSavePatron)
                .addContainerGap(232, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tpParent.addTab("Manage Patron", jPanel3);

        jTabbedPane4.setBackground(new java.awt.Color(255, 102, 102));

        jPanel10.setBackground(new java.awt.Color(255, 204, 51));
        jPanel10.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel10ComponentShown(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel18.setText("Patron Name");

        jButtonSearchReservedBook.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        jButtonSearchReservedBook.setText("Search Book");
        jButtonSearchReservedBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchReservedBookActionPerformed(evt);
            }
        });

        tblCIReservedCopy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Copy Id", "Status"
            }
        ));
        jScrollPane3.setViewportView(tblCIReservedCopy);

        jButtonSearchReservedBook1.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        jButtonSearchReservedBook1.setText("Check In");
        jButtonSearchReservedBook1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchReservedBook1ActionPerformed(evt);
            }
        });

        cmbCIPatron.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSearchReservedBook)
                            .addComponent(cmbCIPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jButtonSearchReservedBook1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cmbCIPatron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jButtonSearchReservedBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSearchReservedBook1)
                .addContainerGap(185, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Check In Book", jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 204, 51));
        jPanel11.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel11ComponentShown(evt);
            }
        });

        jLabel22.setText("Patron");

        jButton4.setText("Check Out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tblBookCopyStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Book Copy Id", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblBookCopyStatus);

        cmbCOPatron.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbCOBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCOBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCOBookActionPerformed(evt);
            }
        });

        jLabel2.setText("Book");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jButton4))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(47, 47, 47)
                                .addComponent(cmbCOBook, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addContainerGap(124, Short.MAX_VALUE)
                    .addComponent(cmbCOPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(72, 72, 72)))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel22)
                .addGap(44, 44, 44)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCOBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(122, 122, 122))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(cmbCOPatron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(361, Short.MAX_VALUE)))
        );

        jTabbedPane4.addTab("Check Out Book", jPanel11);

        tpParent.addTab("Check Books", jTabbedPane4);

        tpUpdateBook.setBackground(new java.awt.Color(255, 102, 102));

        jPanel5.setBackground(new java.awt.Color(255, 204, 51));

        jLabel7.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel7.setText("Book Name");

        jLabel8.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel8.setText("Author");

        jLabel9.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel9.setText("Edition");

        jLabel10.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel10.setText("Published Year");

        txtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorActionPerformed(evt);
            }
        });

        jButtonBAddbook.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        jButtonBAddbook.setText("Add Book");
        jButtonBAddbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBAddbookActionPerformed(evt);
            }
        });

        txtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtISBNActionPerformed(evt);
            }
        });

        jLabel19.setText("ISBN");

        jLabel20.setText("Publisher");

        jLabel21.setText("Catelog Number");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(70, 70, 70)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCatelogNumber)
                    .addComponent(txtPublisher)
                    .addComponent(txtISBN)
                    .addComponent(jButtonBAddbook)
                    .addComponent(txtBookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(txtAuthor)
                    .addComponent(txtEdition)
                    .addComponent(txtPubYear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtEdition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtPubYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCatelogNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(26, 26, 26)
                .addComponent(jButtonBAddbook)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tpUpdateBook.addTab("Add", jPanel5);

        jPanel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentMoved(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentShown(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(255, 204, 51));
        jPanel13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel13FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel13FocusLost(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel12.setText("Book Name");

        jLabel13.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel13.setText("Author");

        jLabel14.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel14.setText("Edition");

        jLabel15.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel15.setText("Publisher");

        txtUAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUAuthorActionPerformed(evt);
            }
        });

        jButtonBUpdatebook.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jButtonBUpdatebook.setText("Update Book");
        jButtonBUpdatebook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBUpdatebookActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel23.setText("Published Year");

        jLabel24.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel24.setText("ISBN");

        jLabel25.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel25.setText("Catelog Number");

        btnDeleteBook.setText("Delete Book");
        btnDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookActionPerformed(evt);
            }
        });

        jLabel1.setText("Amount of Copies");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25)
                    .addComponent(jButtonBUpdatebook)
                    .addComponent(jLabel1))
                .addGap(31, 31, 31)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUBookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(txtUAuthor)
                    .addComponent(txtUEdition)
                    .addComponent(txtUPubYear)
                    .addComponent(txtUISBN)
                    .addComponent(txtUPublisher)
                    .addComponent(txtUCatelogNumber)
                    .addComponent(btnDeleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNoOfCopies))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtUBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtUAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtUEdition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUPubYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUCatelogNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoOfCopies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBUpdatebook))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tpUpdateBook.addTab("Update", jPanel7);

        tpParent.addTab("Manage Books", tpUpdateBook);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpParent)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpParent, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        tpParent.getAccessibleContext().setAccessibleName("Manage Books");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAuthorActionPerformed

    private void txtUAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUAuthorActionPerformed

    private void jButtonBAddbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBAddbookActionPerformed
        if (txtBookTitle.getText().isEmpty() || txtAuthor.getText().isEmpty() || txtEdition.getText().isEmpty() || txtPubYear.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fields cannot be empty, when adding a new Book.", "Add new Books", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                NewBookController bookController = new NewBookController();
                BookTitle bookTitle = new BookTitle();
                bookTitle.setTitle(txtBookTitle.getText());
                bookTitle.setAuthor(txtAuthor.getText());
                bookTitle.setEdition(txtEdition.getText());
                bookTitle.setIsbn(txtISBN.getText());
                bookTitle.setPubYear(txtPubYear.getText());
                bookTitle.setPublisher(txtPublisher.getText());
                bookTitle.setCatelogNumber(txtCatelogNumber.getText());
//                bookController.addBook(bookTitle, book);
                //
                bookController.addCopies(1, bookController.addBook(bookTitle, book));
                JOptionPane.showMessageDialog(rootPane, "Successfully added to the system");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "an error occurred" + ex);
            }
        }
    }//GEN-LAST:event_jButtonBAddbookActionPerformed

    private void jButtonBUpdatebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBUpdatebookActionPerformed
        if (txtUBookTitle.getText().isEmpty() || txtUAuthor.getText().isEmpty()
                || txtUEdition.getText().isEmpty() || txtUPubYear.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fields cannot be empty when updating a book.",
                    "Update Book", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
//                String bookname = jTextFieldRBName.getText();
//                BookTitle deleteBook = new BookTitle();
//                deleteBook.setName(bookname);
//
                NewBookController bookController = new NewBookController();
//                int deleteResult = bookController.deleteBook(book, deleteBook);
//                if (deleteResult == 1) {
                BookTitle bookTitle = new BookTitle();
                bookTitle.setId(this.selectedBookTitleId);
                bookTitle.setTitle(txtUBookTitle.getText());
                bookTitle.setAuthor(txtUAuthor.getText());
                bookTitle.setEdition(txtUEdition.getText());
                bookTitle.setIsbn(txtUISBN.getText());
                bookTitle.setPubYear(txtUPubYear.getText());
                bookTitle.setPublisher(txtUPublisher.getText());
                bookTitle.setCatelogNumber(txtUCatelogNumber.getText());
                bookController.updateBook(bookTitle, book);
                bookController.addCopies(Integer.parseInt(txtNoOfCopies.getText()), this.selectedBookTitleId);
                JOptionPane.showMessageDialog(rootPane, "Book successfully updated");
//                }else{
//                    JOptionPane.showMessageDialog(rootPane, "Update failed");
//                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "An error occurred" + ex);
            }

//            String bookname = jTextFieldUpBName.getText();
//            String bookid = jTextFieldUpBId.getText();
//            String bookisbn = jTextFieldUpBISBN.getText();
//            String authorname = jTextFieldUpBAuthor.getText();
//            BookTitle newBook = new BookTitle();
//            newBook.setId(jTextFieldBId.getText());
//            newBook.setName(jTextFieldBName.getText());
//            newBook.setIsbn(jTextFieldBISBN.getText());
//            newBook.setAuthor(jTextFieldBAuthor.getText());
//            String updatedRecord = newBook.getName() + "    " + newBook.getId() + "         " + newBook.getIsbn() + "                " + newBook.getAuthor() + "               " + "\n";
//            String oldRecord = "";
//
//            try (BufferedReader reader = new BufferedReader(new FileReader(book)); BufferedWriter writer = new BufferedWriter(new FileWriter("tempbook.txt"))) {
//
//                String currentLine;
//                boolean bookFound = false;
//
//                while ((currentLine = reader.readLine()) != null) {
//                    String[] bookDetails = currentLine.split("\\s{4,}");
//                    if (bookDetails[0].equalsIgnoreCase(newBook.getName())) {
//                        oldRecord = currentLine;
//                        writer.write(updatedRecord);
//                        writer.newLine();
//                        bookFound = true;
//                    } else {
//                        writer.write(currentLine);
//                        writer.newLine();
//                    }
//                }
//
//                if (!bookFound) {
//                    JOptionPane.showMessageDialog(rootPane, "BookTitle not found in the system");
//                    return;
//                }
//
//                writer.close();
//                reader.close();
//
//                if (!book.delete()) {
//                    JOptionPane.showMessageDialog(rootPane, "Error deleting original file");
//                    return;
//                }
//
//                File tempFile = new File("tempbook.txt");
//                if (!tempFile.renameTo(book)) {
//                    JOptionPane.showMessageDialog(rootPane, "Error renaming temporary file");
//                } else {
//                    JOptionPane.showMessageDialog(rootPane, "BookTitle updated successfully");
//                }
//
//            } catch (IOException ex) {
//                JOptionPane.showMessageDialog(rootPane, "An error occurred: " + ex);
//            }
        }
    }//GEN-LAST:event_jButtonBUpdatebookActionPerformed

    private void jButtonSearchReservedBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchReservedBookActionPerformed
        try {
            // TODO add your handling code here:
            NewBookController bookController = new NewBookController();
            String selectedBook = cmbCIPatron.getSelectedItem().toString();
            int patronId = Integer.parseInt(selectedBook.split("--")[0]);
            List<BookCopy> copyList = bookController.searchReservedBookCopyByPatronId(patronId);
            DefaultTableModel tableModel = (DefaultTableModel) tblCIReservedCopy.getModel();
            tableModel.setRowCount(0);
            for (BookCopy bookCopy : copyList) {
                tableModel.addRow(new Object[]{bookCopy.getId(), bookCopy.getStatus()});
            }
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSearchReservedBookActionPerformed

    private void txtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtISBNActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String selectedBoook = cmbCOBook.getSelectedItem().toString();
            int bookTitleId = Integer.parseInt(selectedBoook.split("--")[0]);
            String selectedPatron = cmbCOPatron.getSelectedItem().toString();
            int patronId = Integer.parseInt(selectedPatron.split("--")[0]);
            int bookCopyId = (int) tblBookCopyStatus.getValueAt(tblBookCopyStatus.getSelectedRow(), 0);
            BookCopy bookCopy = new BookCopy();
            bookCopy.setId(bookCopyId);
            bookCopy.setBookTitleId(bookTitleId);
            bookCopy.setPatronId(patronId);
            bookCopy.setStatus("Reserved");
            NewBookController bookController = new NewBookController();
            bookController.updateBookCopy(bookCopy);
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnSavePatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePatronActionPerformed
        if (this.selectedPatronId == 0) {
            try {
                Patron patron = new Patron();
                PatronController patronController = new PatronController();
                patron.setName(txtPatronName.getText());
                patron.setAddress(txtAddress.getText());
                patron.setTelephone(txtTelephone.getText());
                patron.setType(cmbPatronType.getSelectedItem().toString());
                patronController.addPatron(patron);
            } catch (Exception ex) {
                Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                Patron patron = new Patron();
                PatronController patronController = new PatronController();
                patron.setId(this.selectedBookTitleId);
                patron.setName(txtPatronName.getText());
                patron.setAddress(txtAddress.getText());
                patron.setTelephone(txtTelephone.getText());
                patron.setType(cmbPatronType.getSelectedItem().toString());
                patronController.updatePatron(patron);
            } catch (Exception ex) {
                Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSavePatronActionPerformed

    private void jButtonSearchReservedBook1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchReservedBook1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            NewBookController bookController = new NewBookController();
            String selectedBook = cmbCIPatron.getSelectedItem().toString();
            int patronId = Integer.parseInt(selectedBook.split("--")[0]);
            List<BookCopy> copyList = bookController.searchReservedBookCopyByPatronId(patronId);
            DefaultTableModel tableModel = (DefaultTableModel) tblCIReservedCopy.getModel();
            for (BookCopy bookCopy : copyList) {
                bookCopy.setPatronId(-1);
                bookCopy.setStatus("Available");
                bookController.updateBookCopy(bookCopy);
            }
            tableModel.setRowCount(0);
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSearchReservedBook1ActionPerformed

    private void txtSearchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchBookActionPerformed

    private void jButtonSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearch1ActionPerformed
        try {
            // TODO add your handling code here:
            NewBookController bookController = new NewBookController();
            List<BookSearchResult> searchResult = bookController.searchBookByTitleAndISBN(book, txtSearchBook.getText());

            if (!searchResult.isEmpty()) {
                DefaultTableModel tableModel = (DefaultTableModel) tblBookSearchResult.getModel();
                if (tableModel.getRowCount() > 0) {
                    tableModel.setRowCount(0);
                }
                for (BookSearchResult bookSearchResult : searchResult) {
                    tableModel.addRow(new Object[]{bookSearchResult.getId(), bookSearchResult.getTitle(), bookSearchResult.getCopies()});
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Book Not Found");
                DefaultTableModel tableModel = (DefaultTableModel) tblBookSearchResult.getModel();
                tableModel.setRowCount(0);
            }
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSearch1ActionPerformed

    private void tblBookSearchResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookSearchResultMouseClicked
        int selectedRow = tblBookSearchResult.getSelectedRow();
        tpParent.setSelectedIndex(3);
        tpUpdateBook.setSelectedIndex(1);
        this.selectedBookTitleId = (int) tblBookSearchResult.getValueAt(tblBookSearchResult.getSelectedRow(), 0);
//        if (tblFamilyDetail.isRowSelected(tblFamilyDetail.getSelectedRow())) {
//            if (!((String) tblFamilyDetail.getValueAt(tblFamilyDetail.getSelectedRow(), 0)).equals("")) {
//                EditDelete();
//            }
//        } else {
//            JOptionPane.showMessageDialog(this, "Please select a row first");
//        }
    }//GEN-LAST:event_tblBookSearchResultMouseClicked

    private void jPanel13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel13FocusGained

    }//GEN-LAST:event_jPanel13FocusGained

    private void jPanel13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel13FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel13FocusLost

    private void jPanel7ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
        // TODO add your handling code here:
        if (this.selectedBookTitleId > 0) {
            try {
                NewBookController bookController = new NewBookController();
                BookTitle bookTitle = bookController.searchBook(book, this.selectedBookTitleId);
                txtUBookTitle.setText(bookTitle.getTitle());
                txtUAuthor.setText(bookTitle.getAuthor());
                txtUEdition.setText(bookTitle.getEdition());
                txtUISBN.setText(bookTitle.getIsbn());
                txtUPublisher.setText(bookTitle.getPublisher());
                txtUPubYear.setText(bookTitle.getPubYear());
                txtUCatelogNumber.setText(bookTitle.getCatelogNumber());
                txtNoOfCopies.setText(bookController.searchBookCopies(this.selectedBookTitleId).size() + "");
            } catch (Exception ex) {
                Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jPanel7ComponentShown

    private void jPanel7ComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel7ComponentMoved

    private void btnDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookActionPerformed
        try {
            // TODO add your handling code here:
            NewBookController bookController = new NewBookController();
            BookTitle bookTitle = new BookTitle();
            bookTitle.setId(this.selectedBookTitleId);
            bookController.deleteBook(book, bookTitle);
            this.selectedBookTitleId = 0;
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteBookActionPerformed

    private void jPanel9ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel9ComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel9ComponentShown

    private void jPanel10ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel10ComponentShown
        try {
            // TODO add your handling code here:
            PatronController patronController = new PatronController();
            List<PatronMin> patronList = patronController.getAllPatronList();
            cmbCIPatron.removeAllItems();
            for (PatronMin patronMin : patronList) {
                cmbCIPatron.addItem(patronMin.getId() + "--" + patronMin.getName());
            }
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPanel10ComponentShown

    private void jPanel11ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel11ComponentShown
        try {
            // TODO add your handling code here:
            PatronController patronController = new PatronController();
            List<PatronMin> patronList = patronController.getAllPatronList();
            cmbCOPatron.removeAllItems();
            for (PatronMin patronMin : patronList) {
                cmbCOPatron.addItem(patronMin.getId() + "--" + patronMin.getName());
            }
            NewBookController bookController = new NewBookController();
            List<BookMin> bookList = bookController.getAllBookList();
            cmbCOBook.removeAllItems();
            for (BookMin bookMin : bookList) {
                cmbCOBook.addItem(bookMin.getId() + "--" + bookMin.getTitle());
            }
            cmbCOBook.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    try {
                        String selectedBook = cmbCOBook.getSelectedItem().toString();
                        int bookTitleId = Integer.parseInt(selectedBook.split("--")[0]);
                        String bookTitle = selectedBook.split("--")[1];
                        List<BookCopy> copyList = bookController.searchBookCopies(bookTitleId);
                        DefaultTableModel tableModel = (DefaultTableModel) tblBookCopyStatus.getModel();
                        tableModel.setRowCount(0);
                        for (BookCopy bookCopy : copyList) {
                            tableModel.addRow(new Object[]{bookCopy.getId(), bookCopy.getStatus()});
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
        } catch (Exception ex) {
            Logger.getLogger(librarian.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPanel11ComponentShown

    private void btnSavePatronComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_btnSavePatronComponentShown
        // TODO add your handling code here:
        if (this.selectedPatronId > 0) {
            btnSavePatron.setText("Add Patron");
        } else {
            btnSavePatron.setText("Update Patron");
        }
    }//GEN-LAST:event_btnSavePatronComponentShown

    private void cmbCOBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCOBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCOBookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new librarian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteBook;
    private javax.swing.JButton btnSavePatron;
    private javax.swing.JComboBox<String> cmbCIPatron;
    private javax.swing.JComboBox<String> cmbCOBook;
    private javax.swing.JComboBox<String> cmbCOPatron;
    private javax.swing.JComboBox<String> cmbPatronType;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonBAddbook;
    private javax.swing.JButton jButtonBUpdatebook;
    private javax.swing.JButton jButtonSearch1;
    private javax.swing.JButton jButtonSearchReservedBook;
    private javax.swing.JButton jButtonSearchReservedBook1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable tblBookCopyStatus;
    private javax.swing.JTable tblBookSearchResult;
    private javax.swing.JTable tblCIReservedCopy;
    private javax.swing.JTabbedPane tpParent;
    private javax.swing.JPanel tpSearch;
    private javax.swing.JTabbedPane tpUpdateBook;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtCatelogNumber;
    private javax.swing.JTextField txtEdition;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtNoOfCopies;
    private javax.swing.JTextField txtPatronName;
    private javax.swing.JTextField txtPubYear;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtSearchBook;
    private javax.swing.JTextField txtTelephone;
    private javax.swing.JTextField txtUAuthor;
    private javax.swing.JTextField txtUBookTitle;
    private javax.swing.JTextField txtUCatelogNumber;
    private javax.swing.JTextField txtUEdition;
    private javax.swing.JTextField txtUISBN;
    private javax.swing.JTextField txtUPubYear;
    private javax.swing.JTextField txtUPublisher;
    // End of variables declaration//GEN-END:variables
}
